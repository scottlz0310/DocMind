[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "docmind"
version = "1.0.0"
description = "ローカルAI搭載ドキュメント検索デスクトップアプリケーション"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "DocMind Team"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Desktop Environment",
    "Topic :: Text Processing :: Indexing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.11"
dependencies = [
    # GUI フレームワーク
    "pyside6==6.9.2",
    # 検索エンジン
    "whoosh==2.7.4",
    # AI/ML - セマンティック検索（依存関係は自動解決）
    "sentence-transformers==2.7.0",
    # ドキュメント処理
    "pymupdf==1.26.4",
    "python-docx==1.2.0",
    "openpyxl==3.1.5",
    # ファイルシステム監視
    "watchdog==6.0.0",
    # ユーティリティ
    "chardet==5.2.0",
    "psutil==7.0.0",
    "certifi==2025.8.3",
    "charset-normalizer==3.4.3",
    "et-xmlfile==2.0.0",
    "filelock==3.19.1",
    "fsspec==2025.7.0",
    "hf-xet==1.1.9",
    "huggingface-hub==0.34.4",
    "idna==3.10",
    "jinja2==3.1.6",
    "joblib==1.5.2",
    "lxml==6.0.1",
    "markupsafe==3.0.2",
    "mpmath==1.3.0",
    "networkx==3.5",
    "numpy==2.3.2",
    "nvidia-cublas-cu12==12.8.4.1",
    "nvidia-cuda-cupti-cu12==12.8.90",
    "nvidia-cuda-nvrtc-cu12==12.8.93",
    "nvidia-cuda-runtime-cu12==12.8.90",
    "nvidia-cudnn-cu12==9.10.2.21",
    "nvidia-cufft-cu12==11.3.3.83",
    "nvidia-cufile-cu12==1.13.1.3",
    "nvidia-curand-cu12==10.3.9.90",
    "nvidia-cusolver-cu12==11.7.3.90",
    "nvidia-cusparse-cu12==12.5.8.93",
    "nvidia-cusparselt-cu12==0.7.1",
    "nvidia-nccl-cu12==2.27.3",
    "nvidia-nvjitlink-cu12==12.8.93",
    "nvidia-nvtx-cu12==12.8.90",
    "packaging==25.0",
    "pillow==11.3.0",
    "pyside6-addons==6.9.2",
    "pyside6-essentials==6.9.2",
    "pyyaml==6.0.2",
    "regex==2025.8.29",
    "requests==2.32.5",
    "safetensors==0.6.2",
    "scikit-learn==1.7.1",
    "scipy==1.16.1",
    "setuptools==80.9.0",
    "shiboken6==6.9.2",
    "sympy==1.14.0",
    "threadpoolctl==3.6.0",
    "tokenizers==0.22.0",
    "torch==2.8.0",
    "tqdm==4.67.1",
    "transformers==4.56.0",
    "triton==3.4.0",
    "typing-extensions==4.15.0",
    "urllib3==2.5.0",
    "pytest>=8.4.2",
    "pytest-cov>=6.3.0",
    "pytest-xdist>=3.8.0",
]

[project.optional-dependencies]
dev = [
    # テストフレームワーク
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-timeout>=2.1.0",
    # コード品質
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    # セキュリティ
    "bandit>=1.7.0",
    "safety>=2.3.0",
]
build = [
    "pyinstaller>=5.13.0",
    "auto-py-to-exe>=2.40.0",
    # ビルドスクリプトが必要とする依存関係
    "PySide6>=6.0.0",
    "sentence-transformers>=2.2.0,<3.0.0",
    "whoosh>=2.7.4",
    "PyMuPDF>=1.20.0",
    "python-docx>=0.8.11",
    "openpyxl>=3.0.0",
    "watchdog>=2.1.0",
    "chardet>=5.0.0",
    "psutil>=5.8.0",
]
security = [
    "bandit>=1.7.0",
    "safety>=2.3.0",
]

[project.scripts]
docmind = "main:main"

[project.urls]
Homepage = "https://github.com/docmind/docmind"
Repository = "https://github.com/docmind/docmind"
Issues = "https://github.com/docmind/docmind/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.ico", "*.svg", "*.png"]



[tool.coverage.run]
# Phase5カバレッジ設定
source = ["src"]
branch = true
parallel = true

omit = [
    # テスト関連
    "*/tests/*",
    "*/test_*",
    # ビルド・キャッシュ
    "*/__pycache__/*",
    "*/venv/*",
    "*/build/*",
    "*/dist/*",
    # エントリポイント
    "main.py",
    "test_entry.py",
]

[tool.coverage.report]
# Phase5カバレッジ目標: ユニット85%、統合100%（接続部分）、全体80%
show_missing = true
skip_covered = false
skip_empty = true
precision = 1

# カバレッジ除外行
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    # Phase5追加除外
    "def main\\(\\):",
    "if TYPE_CHECKING:",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[tool.black]
line-length = 88
target-version = ['py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "T20", # flake8-print
]
ignore = [
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "B017",  # pytest.raises(Exception) is too broad
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["T20", "F841"]  # Allow unused variables in tests

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
check_untyped_defs = false
disallow_any_generics = false
disallow_incomplete_defs = false
disallow_untyped_defs = false
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_return_any = false
strict_equality = false
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "sentence_transformers.*",
    "whoosh.*",
    "fitz.*",
    "docx.*",
    "openpyxl.*",
    "watchdog.*",
]
ignore_missing_imports = true
