<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="7" failures="5" skipped="0" tests="19" time="12.206" timestamp="2025-08-22T23:46:10.041608+09:00" hostname="G-tune-i712700K"><testcase classname="tests.test_comprehensive_suite.TestTestSuiteIntegration" name="test_pytest_configuration_integration" time="0.001" /><testcase classname="tests.test_comprehensive_suite.TestTestSuiteIntegration" name="test_test_runner_script_integration" time="0.002" /><testcase classname="tests.test_comprehensive_suite.TestTestSuiteIntegration" name="test_end_to_end_test_workflow" time="0.001" /><testcase classname="tests.test_embedding_integration.TestEmbeddingManagerIntegration" name="test_real_model_loading_and_embedding_generation" time="3.331" /><testcase classname="tests.test_embedding_integration.TestEmbeddingManagerIntegration" name="test_real_semantic_search" time="2.771" /><testcase classname="tests.test_embedding_integration.TestEmbeddingManagerIntegration" name="test_embedding_persistence" time="2.720" /><testcase classname="tests.test_embedding_integration.TestEmbeddingManagerIntegration" name="test_similarity_consistency" time="2.859" /><testcase classname="tests.test_end_to_end_integration.TestEndToEndWorkflow" name="test_complete_document_indexing_workflow" time="0.033"><error message="failed on setup with &quot;AttributeError: 'DatabaseManager' object has no attribute 'initialize'&quot;">self = &lt;tests.test_end_to_end_integration.TestEndToEndWorkflow object at 0x7fc3be088910&gt;
test_config = &lt;src.utils.config.Config object at 0x7fc3bd9fcd70&gt;
sample_documents = {'excel': [PosixPath('/tmp/docmind_test_ibkiyv51/test_documents/excel_files/システム構成_000.xlsx')], 'markdown': [PosixPath...ents/text_files/運用手順_003.txt'), PosixPath('/tmp/docmind_test_ibkiyv51/test_documents/text_files/システム構成_004.txt')], ...}

    @pytest.fixture(autouse=True)
    def setup(self, test_config, sample_documents):
        """テストセットアップ"""
        self.config = test_config
        self.sample_documents = sample_documents
    
        # コンポーネントを初期化
        self.db_manager = DatabaseManager(str(self.config.database_file))
&gt;       self.db_manager.initialize()
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'DatabaseManager' object has no attribute 'initialize'

tests/test_end_to_end_integration.py:35: AttributeError</error></testcase><testcase classname="tests.test_end_to_end_integration.TestEndToEndWorkflow" name="test_complete_search_workflow" time="0.081"><error message="failed on setup with &quot;AttributeError: 'DatabaseManager' object has no attribute 'initialize'&quot;">self = &lt;tests.test_end_to_end_integration.TestEndToEndWorkflow object at 0x7fc3be089950&gt;
test_config = &lt;src.utils.config.Config object at 0x7fc3bd9fcd70&gt;
sample_documents = {'excel': [PosixPath('/tmp/docmind_test_ibkiyv51/test_documents/excel_files/システム構成_000.xlsx')], 'markdown': [PosixPath...uments/text_files/要件定義_003.txt'), PosixPath('/tmp/docmind_test_ibkiyv51/test_documents/text_files/要件定義_004.txt')], ...}

    @pytest.fixture(autouse=True)
    def setup(self, test_config, sample_documents):
        """テストセットアップ"""
        self.config = test_config
        self.sample_documents = sample_documents
    
        # コンポーネントを初期化
        self.db_manager = DatabaseManager(str(self.config.database_file))
&gt;       self.db_manager.initialize()
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'DatabaseManager' object has no attribute 'initialize'

tests/test_end_to_end_integration.py:35: AttributeError</error></testcase><testcase classname="tests.test_end_to_end_integration.TestEndToEndWorkflow" name="test_incremental_update_workflow" time="0.030"><error message="failed on setup with &quot;AttributeError: 'DatabaseManager' object has no attribute 'initialize'&quot;">self = &lt;tests.test_end_to_end_integration.TestEndToEndWorkflow object at 0x7fc3be06df30&gt;
test_config = &lt;src.utils.config.Config object at 0x7fc3bd9fcd70&gt;
sample_documents = {'excel': [PosixPath('/tmp/docmind_test_ibkiyv51/test_documents/excel_files/ユーザーマニュアル_000.xlsx')], 'markdown': [PosixP...ments/text_files/API仕様_003.txt'), PosixPath('/tmp/docmind_test_ibkiyv51/test_documents/text_files/要件定義_004.txt')], ...}

    @pytest.fixture(autouse=True)
    def setup(self, test_config, sample_documents):
        """テストセットアップ"""
        self.config = test_config
        self.sample_documents = sample_documents
    
        # コンポーネントを初期化
        self.db_manager = DatabaseManager(str(self.config.database_file))
&gt;       self.db_manager.initialize()
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'DatabaseManager' object has no attribute 'initialize'

tests/test_end_to_end_integration.py:35: AttributeError</error></testcase><testcase classname="tests.test_end_to_end_integration.TestEndToEndWorkflow" name="test_error_recovery_workflow" time="0.029"><error message="failed on setup with &quot;AttributeError: 'DatabaseManager' object has no attribute 'initialize'&quot;">self = &lt;tests.test_end_to_end_integration.TestEndToEndWorkflow object at 0x7fc3be06e190&gt;
test_config = &lt;src.utils.config.Config object at 0x7fc3bd9fcd70&gt;
sample_documents = {'excel': [PosixPath('/tmp/docmind_test_ibkiyv51/test_documents/excel_files/運用手順_000.xlsx')], 'markdown': [PosixPath('...ts/text_files/データベース設計_003.txt'), PosixPath('/tmp/docmind_test_ibkiyv51/test_documents/text_files/要件定義_004.txt')], ...}

    @pytest.fixture(autouse=True)
    def setup(self, test_config, sample_documents):
        """テストセットアップ"""
        self.config = test_config
        self.sample_documents = sample_documents
    
        # コンポーネントを初期化
        self.db_manager = DatabaseManager(str(self.config.database_file))
&gt;       self.db_manager.initialize()
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'DatabaseManager' object has no attribute 'initialize'

tests/test_end_to_end_integration.py:35: AttributeError</error></testcase><testcase classname="tests.test_end_to_end_integration.TestEndToEndWorkflow" name="test_large_dataset_workflow" time="0.072"><error message="failed on setup with &quot;AttributeError: 'DatabaseManager' object has no attribute 'initialize'&quot;">self = &lt;tests.test_end_to_end_integration.TestEndToEndWorkflow object at 0x7fc3bdff5910&gt;
test_config = &lt;src.utils.config.Config object at 0x7fc3bd9fcd70&gt;
sample_documents = {'excel': [PosixPath('/tmp/docmind_test_ibkiyv51/test_documents/excel_files/データベース設計_000.xlsx')], 'markdown': [PosixPa...ts/text_files/設計書_003.txt'), PosixPath('/tmp/docmind_test_ibkiyv51/test_documents/text_files/ユーザーマニュアル_004.txt')], ...}

    @pytest.fixture(autouse=True)
    def setup(self, test_config, sample_documents):
        """テストセットアップ"""
        self.config = test_config
        self.sample_documents = sample_documents
    
        # コンポーネントを初期化
        self.db_manager = DatabaseManager(str(self.config.database_file))
&gt;       self.db_manager.initialize()
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'DatabaseManager' object has no attribute 'initialize'

tests/test_end_to_end_integration.py:35: AttributeError</error></testcase><testcase classname="tests.test_end_to_end_integration.TestSystemIntegration" name="test_component_integration" time="0.003"><failure message="AttributeError: 'DatabaseManager' object has no attribute 'initialize'">self = &lt;tests.test_end_to_end_integration.TestSystemIntegration object at 0x7fc3be089a90&gt;
test_config = &lt;src.utils.config.Config object at 0x7fc3bd9fcd70&gt;

    def test_component_integration(self, test_config):
        """コンポーネント間の統合テスト"""
        # 各コンポーネントが正常に初期化できることを確認
        db_manager = DatabaseManager(str(test_config.database_file))
&gt;       db_manager.initialize()
        ^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'DatabaseManager' object has no attribute 'initialize'

tests/test_end_to_end_integration.py:220: AttributeError</failure></testcase><testcase classname="tests.test_end_to_end_integration.TestSystemIntegration" name="test_configuration_integration" time="0.000"><failure message="AttributeError: 'str' object has no attribute 'exists'">self = &lt;tests.test_end_to_end_integration.TestSystemIntegration object at 0x7fc3be089bd0&gt;
test_config = &lt;src.utils.config.Config object at 0x7fc3bd9fcd70&gt;

    def test_configuration_integration(self, test_config):
        """設定統合テスト"""
        # 設定が各コンポーネントに正しく適用されることを確認
&gt;       assert test_config.data_dir.exists()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'str' object has no attribute 'exists'

tests/test_end_to_end_integration.py:244: AttributeError</failure></testcase><testcase classname="tests.test_end_to_end_integration.TestSystemIntegration" name="test_data_persistence_integration" time="0.031"><failure message="AttributeError: 'DatabaseManager' object has no attribute 'initialize'">self = &lt;tests.test_end_to_end_integration.TestSystemIntegration object at 0x7fc3be06e2c0&gt;
test_config = &lt;src.utils.config.Config object at 0x7fc3bd9fcd70&gt;
sample_documents = {'excel': [PosixPath('/tmp/docmind_test_ibkiyv51/test_documents/excel_files/要件定義_000.xlsx')], 'markdown': [PosixPath('...ts/text_files/システム構成_003.txt'), PosixPath('/tmp/docmind_test_ibkiyv51/test_documents/text_files/システム構成_004.txt')], ...}

    def test_data_persistence_integration(self, test_config, sample_documents):
        """データ永続化統合テスト"""
        # データベース永続化テスト
        db_manager = DatabaseManager(str(test_config.database_file))
&gt;       db_manager.initialize()
        ^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'DatabaseManager' object has no attribute 'initialize'

tests/test_end_to_end_integration.py:263: AttributeError</failure></testcase><testcase classname="tests.test_end_to_end_integration.TestPerformanceIntegration" name="test_search_performance_requirements" time="0.002"><failure message="AttributeError: 'DatabaseManager' object has no attribute 'initialize'">self = &lt;tests.test_end_to_end_integration.TestPerformanceIntegration object at 0x7fc3be089d10&gt;
test_config = &lt;src.utils.config.Config object at 0x7fc3bd9fcd70&gt;
performance_timer = &lt;tests.conftest.performance_timer.&lt;locals&gt;.Timer object at 0x7fc3bd84b8c0&gt;
memory_monitor = &lt;tests.conftest.memory_monitor.&lt;locals&gt;.MemoryMonitor object at 0x7fc3bd84b770&gt;

    def test_search_performance_requirements(self, test_config, performance_timer, memory_monitor):
        """検索パフォーマンス要件テスト"""
        # 要件: 最大50,000ドキュメントを5秒以内で検索
    
        # テスト用の小規模データセット（実際の50,000は時間がかかるため）
        db_manager = DatabaseManager(str(test_config.database_file))
&gt;       db_manager.initialize()
        ^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'DatabaseManager' object has no attribute 'initialize'

tests/test_end_to_end_integration.py:309: AttributeError</failure></testcase><testcase classname="tests.test_end_to_end_integration.TestPerformanceIntegration" name="test_startup_performance" time="0.001"><failure message="AttributeError: 'DatabaseManager' object has no attribute 'initialize'">self = &lt;tests.test_end_to_end_integration.TestPerformanceIntegration object at 0x7fc3be089e50&gt;
test_config = &lt;src.utils.config.Config object at 0x7fc3bd9fcd70&gt;
performance_timer = &lt;tests.conftest.performance_timer.&lt;locals&gt;.Timer object at 0x7fc3bd84b4d0&gt;

    def test_startup_performance(self, test_config, performance_timer):
        """起動パフォーマンステスト"""
        # 要件: Windows 10/11で10秒以内に起動
    
        performance_timer.start()
    
        # アプリケーション初期化のシミュレーション
        db_manager = DatabaseManager(str(test_config.database_file))
&gt;       db_manager.initialize()
        ^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'DatabaseManager' object has no attribute 'initialize'

tests/test_end_to_end_integration.py:355: AttributeError</failure></testcase><testcase classname="tests.test_gui_integration.TestGUIIntegration" name="test_complete_gui_workflow" time="0.018"><error message="failed on setup with &quot;AttributeError: property 'logger' of 'MainWindow' object has no setter&quot;">self = &lt;tests.test_gui_integration.TestGUIIntegration object at 0x7fc3bdbfac10&gt;
mock_qt_application = &lt;PySide6.QtWidgets.QApplication(0x1efbfa50) at 0x7fc3ba326580&gt;
test_config = &lt;src.utils.config.Config object at 0x7fc3bd9fcd70&gt;

    @pytest.fixture(autouse=True)
    def setup(self, mock_qt_application, test_config):
        """テストセットアップ"""
        self.app = mock_qt_application
        self.test_config = test_config
    
        # 統合テスト用のメインウィンドウを作成
        with patch('src.gui.main_window.SearchManager') as mock_search_manager, \
             patch('src.gui.main_window.DatabaseManager') as mock_db_manager, \
             patch('src.gui.main_window.Config') as mock_config:
    
            self.mock_search_manager = Mock()
            mock_search_manager.return_value = self.mock_search_manager
    
            self.mock_db_manager = Mock()
            mock_db_manager.return_value = self.mock_db_manager
    
            self.mock_config = Mock()
            mock_config.return_value = self.mock_config
    
&gt;           self.main_window = MainWindow()
                               ^^^^^^^^^^^^

tests/test_gui_integration.py:513: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
src/utils/error_handler.py:326: in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;src.gui.main_window.MainWindow(0x1ec9ea50) at 0x7fc3ba3468c0&gt;
parent = None

    @handle_exceptions(
        context="メインウィンドウ初期化",
        user_message="メインウィンドウの初期化中にエラーが発生しました。",
        attempt_recovery=True,
        reraise=True
    )
    def __init__(self, parent: Optional[QWidget] = None):
        """
        メインウィンドウの初期化
    
        Args:
            parent: 親ウィジェット（通常はNone）
        """
        super().__init__(parent)
    
&gt;       self.logger = logging.getLogger(__name__)
        ^^^^^^^^^^^
E       AttributeError: property 'logger' of 'MainWindow' object has no setter

src/gui/main_window.py:74: AttributeError</error></testcase><testcase classname="tests.test_gui_integration.TestGUIIntegration" name="test_gui_error_handling" time="0.002"><error message="failed on setup with &quot;AttributeError: property 'logger' of 'MainWindow' object has no setter&quot;">self = &lt;tests.test_gui_integration.TestGUIIntegration object at 0x7fc3bdbfad50&gt;
mock_qt_application = &lt;PySide6.QtWidgets.QApplication(0x1efbfa50) at 0x7fc3ba326580&gt;
test_config = &lt;src.utils.config.Config object at 0x7fc3bd9fcd70&gt;

    @pytest.fixture(autouse=True)
    def setup(self, mock_qt_application, test_config):
        """テストセットアップ"""
        self.app = mock_qt_application
        self.test_config = test_config
    
        # 統合テスト用のメインウィンドウを作成
        with patch('src.gui.main_window.SearchManager') as mock_search_manager, \
             patch('src.gui.main_window.DatabaseManager') as mock_db_manager, \
             patch('src.gui.main_window.Config') as mock_config:
    
            self.mock_search_manager = Mock()
            mock_search_manager.return_value = self.mock_search_manager
    
            self.mock_db_manager = Mock()
            mock_db_manager.return_value = self.mock_db_manager
    
            self.mock_config = Mock()
            mock_config.return_value = self.mock_config
    
&gt;           self.main_window = MainWindow()
                               ^^^^^^^^^^^^

tests/test_gui_integration.py:513: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
src/utils/error_handler.py:326: in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;src.gui.main_window.MainWindow(0x1ed13870) at 0x7fc3ba676240&gt;
parent = None

    @handle_exceptions(
        context="メインウィンドウ初期化",
        user_message="メインウィンドウの初期化中にエラーが発生しました。",
        attempt_recovery=True,
        reraise=True
    )
    def __init__(self, parent: Optional[QWidget] = None):
        """
        メインウィンドウの初期化
    
        Args:
            parent: 親ウィジェット（通常はNone）
        """
        super().__init__(parent)
    
&gt;       self.logger = logging.getLogger(__name__)
        ^^^^^^^^^^^
E       AttributeError: property 'logger' of 'MainWindow' object has no setter

src/gui/main_window.py:74: AttributeError</error></testcase></testsuite></testsuites>