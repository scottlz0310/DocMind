<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="7" failures="5" skipped="0" tests="19" time="12.667" timestamp="2025-08-23T06:15:16.582073+09:00" hostname="G-tune-i712700K"><testcase classname="tests.test_comprehensive_suite.TestTestSuiteIntegration" name="test_pytest_configuration_integration" time="0.001" /><testcase classname="tests.test_comprehensive_suite.TestTestSuiteIntegration" name="test_test_runner_script_integration" time="0.002" /><testcase classname="tests.test_comprehensive_suite.TestTestSuiteIntegration" name="test_end_to_end_test_workflow" time="0.001" /><testcase classname="tests.test_embedding_integration.TestEmbeddingManagerIntegration" name="test_real_model_loading_and_embedding_generation" time="3.601" /><testcase classname="tests.test_embedding_integration.TestEmbeddingManagerIntegration" name="test_real_semantic_search" time="2.879" /><testcase classname="tests.test_embedding_integration.TestEmbeddingManagerIntegration" name="test_embedding_persistence" time="2.710" /><testcase classname="tests.test_embedding_integration.TestEmbeddingManagerIntegration" name="test_similarity_consistency" time="2.795" /><testcase classname="tests.test_end_to_end_integration.TestEndToEndWorkflow" name="test_complete_document_indexing_workflow" time="0.042"><error message="failed on setup with &quot;TypeError: SearchManager.__init__() takes 3 positional arguments but 4 were given&quot;">self = &lt;tests.test_end_to_end_integration.TestEndToEndWorkflow object at 0x7f5630f40910&gt;
test_config = &lt;src.utils.config.Config object at 0x7f56308d0ad0&gt;
sample_documents = {'excel': [PosixPath('/tmp/docmind_test_bzo1b0jm/test_documents/excel_files/テスト計画_000.xlsx')], 'markdown': [PosixPath(...ts/text_files/設計書_003.txt'), PosixPath('/tmp/docmind_test_bzo1b0jm/test_documents/text_files/ユーザーマニュアル_004.txt')], ...}

    @pytest.fixture(autouse=True)
    def setup(self, test_config, sample_documents):
        """テストセットアップ"""
        self.config = test_config
        self.sample_documents = sample_documents
    
        # コンポーネントを初期化
        self.db_manager = DatabaseManager(str(self.config.database_file))
        self.db_manager.initialize()
    
        self.index_manager = IndexManager(str(self.config.index_dir))
        self.index_manager.create_index()
    
        self.embedding_manager = EmbeddingManager()
        self.document_processor = DocumentProcessor()
    
&gt;       self.search_manager = SearchManager(
            self.index_manager,
            self.embedding_manager,
            self.db_manager
        )
E       TypeError: SearchManager.__init__() takes 3 positional arguments but 4 were given

tests/test_end_to_end_integration.py:43: TypeError</error></testcase><testcase classname="tests.test_end_to_end_integration.TestEndToEndWorkflow" name="test_complete_search_workflow" time="0.081"><error message="failed on setup with &quot;TypeError: SearchManager.__init__() takes 3 positional arguments but 4 were given&quot;">self = &lt;tests.test_end_to_end_integration.TestEndToEndWorkflow object at 0x7f5630f41950&gt;
test_config = &lt;src.utils.config.Config object at 0x7f56308d0ad0&gt;
sample_documents = {'excel': [PosixPath('/tmp/docmind_test_bzo1b0jm/test_documents/excel_files/API仕様_000.xlsx')], 'markdown': [PosixPath(...ents/text_files/障害対応_003.txt'), PosixPath('/tmp/docmind_test_bzo1b0jm/test_documents/text_files/システム構成_004.txt')], ...}

    @pytest.fixture(autouse=True)
    def setup(self, test_config, sample_documents):
        """テストセットアップ"""
        self.config = test_config
        self.sample_documents = sample_documents
    
        # コンポーネントを初期化
        self.db_manager = DatabaseManager(str(self.config.database_file))
        self.db_manager.initialize()
    
        self.index_manager = IndexManager(str(self.config.index_dir))
        self.index_manager.create_index()
    
        self.embedding_manager = EmbeddingManager()
        self.document_processor = DocumentProcessor()
    
&gt;       self.search_manager = SearchManager(
            self.index_manager,
            self.embedding_manager,
            self.db_manager
        )
E       TypeError: SearchManager.__init__() takes 3 positional arguments but 4 were given

tests/test_end_to_end_integration.py:43: TypeError</error></testcase><testcase classname="tests.test_end_to_end_integration.TestEndToEndWorkflow" name="test_incremental_update_workflow" time="0.033"><error message="failed on setup with &quot;TypeError: SearchManager.__init__() takes 3 positional arguments but 4 were given&quot;">self = &lt;tests.test_end_to_end_integration.TestEndToEndWorkflow object at 0x7f5630f2de00&gt;
test_config = &lt;src.utils.config.Config object at 0x7f56308d0ad0&gt;
sample_documents = {'excel': [PosixPath('/tmp/docmind_test_bzo1b0jm/test_documents/excel_files/システム構成_000.xlsx')], 'markdown': [PosixPath...cuments/text_files/設計書_003.txt'), PosixPath('/tmp/docmind_test_bzo1b0jm/test_documents/text_files/要件定義_004.txt')], ...}

    @pytest.fixture(autouse=True)
    def setup(self, test_config, sample_documents):
        """テストセットアップ"""
        self.config = test_config
        self.sample_documents = sample_documents
    
        # コンポーネントを初期化
        self.db_manager = DatabaseManager(str(self.config.database_file))
        self.db_manager.initialize()
    
        self.index_manager = IndexManager(str(self.config.index_dir))
        self.index_manager.create_index()
    
        self.embedding_manager = EmbeddingManager()
        self.document_processor = DocumentProcessor()
    
&gt;       self.search_manager = SearchManager(
            self.index_manager,
            self.embedding_manager,
            self.db_manager
        )
E       TypeError: SearchManager.__init__() takes 3 positional arguments but 4 were given

tests/test_end_to_end_integration.py:43: TypeError</error></testcase><testcase classname="tests.test_end_to_end_integration.TestEndToEndWorkflow" name="test_error_recovery_workflow" time="0.030"><error message="failed on setup with &quot;TypeError: SearchManager.__init__() takes 3 positional arguments but 4 were given&quot;">self = &lt;tests.test_end_to_end_integration.TestEndToEndWorkflow object at 0x7f5630f2e060&gt;
test_config = &lt;src.utils.config.Config object at 0x7f56308d0ad0&gt;
sample_documents = {'excel': [PosixPath('/tmp/docmind_test_bzo1b0jm/test_documents/excel_files/運用手順_000.xlsx')], 'markdown': [PosixPath('...nts/text_files/技術仕様書_003.txt'), PosixPath('/tmp/docmind_test_bzo1b0jm/test_documents/text_files/システム構成_004.txt')], ...}

    @pytest.fixture(autouse=True)
    def setup(self, test_config, sample_documents):
        """テストセットアップ"""
        self.config = test_config
        self.sample_documents = sample_documents
    
        # コンポーネントを初期化
        self.db_manager = DatabaseManager(str(self.config.database_file))
        self.db_manager.initialize()
    
        self.index_manager = IndexManager(str(self.config.index_dir))
        self.index_manager.create_index()
    
        self.embedding_manager = EmbeddingManager()
        self.document_processor = DocumentProcessor()
    
&gt;       self.search_manager = SearchManager(
            self.index_manager,
            self.embedding_manager,
            self.db_manager
        )
E       TypeError: SearchManager.__init__() takes 3 positional arguments but 4 were given

tests/test_end_to_end_integration.py:43: TypeError</error></testcase><testcase classname="tests.test_end_to_end_integration.TestEndToEndWorkflow" name="test_large_dataset_workflow" time="0.074"><error message="failed on setup with &quot;TypeError: SearchManager.__init__() takes 3 positional arguments but 4 were given&quot;">self = &lt;tests.test_end_to_end_integration.TestEndToEndWorkflow object at 0x7f563101dfd0&gt;
test_config = &lt;src.utils.config.Config object at 0x7f56308d0ad0&gt;
sample_documents = {'excel': [PosixPath('/tmp/docmind_test_bzo1b0jm/test_documents/excel_files/運用手順_000.xlsx')], 'markdown': [PosixPath('...s/text_files/ユーザーマニュアル_003.txt'), PosixPath('/tmp/docmind_test_bzo1b0jm/test_documents/text_files/要件定義_004.txt')], ...}

    @pytest.fixture(autouse=True)
    def setup(self, test_config, sample_documents):
        """テストセットアップ"""
        self.config = test_config
        self.sample_documents = sample_documents
    
        # コンポーネントを初期化
        self.db_manager = DatabaseManager(str(self.config.database_file))
        self.db_manager.initialize()
    
        self.index_manager = IndexManager(str(self.config.index_dir))
        self.index_manager.create_index()
    
        self.embedding_manager = EmbeddingManager()
        self.document_processor = DocumentProcessor()
    
&gt;       self.search_manager = SearchManager(
            self.index_manager,
            self.embedding_manager,
            self.db_manager
        )
E       TypeError: SearchManager.__init__() takes 3 positional arguments but 4 were given

tests/test_end_to_end_integration.py:43: TypeError</error></testcase><testcase classname="tests.test_end_to_end_integration.TestSystemIntegration" name="test_component_integration" time="0.002"><failure message="TypeError: SearchManager.__init__() takes 3 positional arguments but 4 were given">self = &lt;tests.test_end_to_end_integration.TestSystemIntegration object at 0x7f5630f41a90&gt;
test_config = &lt;src.utils.config.Config object at 0x7f56308d0ad0&gt;

    def test_component_integration(self, test_config):
        """コンポーネント間の統合テスト"""
        # 各コンポーネントが正常に初期化できることを確認
        db_manager = DatabaseManager(str(test_config.database_file))
        db_manager.initialize()
    
        index_manager = IndexManager(str(test_config.index_dir))
        index_manager.create_index()
    
        embedding_manager = EmbeddingManager()
        document_processor = DocumentProcessor()
    
&gt;       search_manager = SearchManager(
            index_manager,
            embedding_manager,
            db_manager
        )
E       TypeError: SearchManager.__init__() takes 3 positional arguments but 4 were given

tests/test_end_to_end_integration.py:228: TypeError</failure></testcase><testcase classname="tests.test_end_to_end_integration.TestSystemIntegration" name="test_configuration_integration" time="0.000"><failure message="AttributeError: 'str' object has no attribute 'exists'">self = &lt;tests.test_end_to_end_integration.TestSystemIntegration object at 0x7f5630f41bd0&gt;
test_config = &lt;src.utils.config.Config object at 0x7f56308d0ad0&gt;

    def test_configuration_integration(self, test_config):
        """設定統合テスト"""
        # 設定が各コンポーネントに正しく適用されることを確認
        assert test_config.data_dir.exists()
&gt;       assert test_config.index_dir.exists()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'str' object has no attribute 'exists'

tests/test_end_to_end_integration.py:245: AttributeError</failure></testcase><testcase classname="tests.test_end_to_end_integration.TestSystemIntegration" name="test_data_persistence_integration" time="0.032"><failure message="TypeError: Document.__init__() missing 3 required positional arguments: 'created_date', 'modified_date', and 'indexed_date'">self = &lt;tests.test_end_to_end_integration.TestSystemIntegration object at 0x7f5630f2e190&gt;
test_config = &lt;src.utils.config.Config object at 0x7f56308d0ad0&gt;
sample_documents = {'excel': [PosixPath('/tmp/docmind_test_bzo1b0jm/test_documents/excel_files/データベース設計_000.xlsx')], 'markdown': [PosixPa...nts/text_files/技術仕様書_003.txt'), PosixPath('/tmp/docmind_test_bzo1b0jm/test_documents/text_files/システム構成_004.txt')], ...}

    def test_data_persistence_integration(self, test_config, sample_documents):
        """データ永続化統合テスト"""
        # データベース永続化テスト
        db_manager = DatabaseManager(str(test_config.database_file))
        db_manager.initialize()
    
        # テストドキュメントを作成
&gt;       test_doc = Document(
            id="integration_test_doc",
            file_path="test_integration.txt",
            title="統合テストドキュメント",
            content="これは統合テスト用のドキュメントです。",
            file_type="text",
            size=100
        )
E       TypeError: Document.__init__() missing 3 required positional arguments: 'created_date', 'modified_date', and 'indexed_date'

tests/test_end_to_end_integration.py:266: TypeError</failure></testcase><testcase classname="tests.test_end_to_end_integration.TestPerformanceIntegration" name="test_search_performance_requirements" time="0.002"><failure message="TypeError: SearchManager.__init__() takes 3 positional arguments but 4 were given">self = &lt;tests.test_end_to_end_integration.TestPerformanceIntegration object at 0x7f5630f41d10&gt;
test_config = &lt;src.utils.config.Config object at 0x7f56308d0ad0&gt;
performance_timer = &lt;tests.conftest.performance_timer.&lt;locals&gt;.Timer object at 0x7f5621f016a0&gt;
memory_monitor = &lt;tests.conftest.memory_monitor.&lt;locals&gt;.MemoryMonitor object at 0x7f5621f01d30&gt;

    def test_search_performance_requirements(self, test_config, performance_timer, memory_monitor):
        """検索パフォーマンス要件テスト"""
        # 要件: 最大50,000ドキュメントを5秒以内で検索
    
        # テスト用の小規模データセット（実際の50,000は時間がかかるため）
        db_manager = DatabaseManager(str(test_config.database_file))
        db_manager.initialize()
    
        index_manager = IndexManager(str(test_config.index_dir))
        index_manager.create_index()
    
        embedding_manager = EmbeddingManager()
&gt;       search_manager = SearchManager(index_manager, embedding_manager, db_manager)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       TypeError: SearchManager.__init__() takes 3 positional arguments but 4 were given

tests/test_end_to_end_integration.py:315: TypeError</failure></testcase><testcase classname="tests.test_end_to_end_integration.TestPerformanceIntegration" name="test_startup_performance" time="0.002"><failure message="TypeError: SearchManager.__init__() takes 3 positional arguments but 4 were given">self = &lt;tests.test_end_to_end_integration.TestPerformanceIntegration object at 0x7f5630f41e50&gt;
test_config = &lt;src.utils.config.Config object at 0x7f56308d0ad0&gt;
performance_timer = &lt;tests.conftest.performance_timer.&lt;locals&gt;.Timer object at 0x7f5621f01160&gt;

    def test_startup_performance(self, test_config, performance_timer):
        """起動パフォーマンステスト"""
        # 要件: Windows 10/11で10秒以内に起動
    
        performance_timer.start()
    
        # アプリケーション初期化のシミュレーション
        db_manager = DatabaseManager(str(test_config.database_file))
        db_manager.initialize()
    
        index_manager = IndexManager(str(test_config.index_dir))
        index_manager.create_index()
    
        embedding_manager = EmbeddingManager()
        # モデル読み込みをモック（実際の読み込みは時間がかかるため）
        with patch.object(embedding_manager, 'load_model'):
            embedding_manager.load_model()
    
&gt;       search_manager = SearchManager(index_manager, embedding_manager, db_manager)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       TypeError: SearchManager.__init__() takes 3 positional arguments but 4 were given

tests/test_end_to_end_integration.py:365: TypeError</failure></testcase><testcase classname="tests.test_gui_integration.TestGUIIntegration" name="test_complete_gui_workflow" time="0.095"><error message="failed on setup with &quot;OverflowError&quot;">self = &lt;tests.test_gui_integration.TestGUIIntegration object at 0x7f5630abe850&gt;
mock_qt_application = &lt;PySide6.QtWidgets.QApplication(0x1e1905d0) at 0x7f562d5e09c0&gt;
test_config = &lt;src.utils.config.Config object at 0x7f56308d0ad0&gt;

    @pytest.fixture(autouse=True)
    def setup(self, mock_qt_application, test_config):
        """テストセットアップ"""
        self.app = mock_qt_application
        self.test_config = test_config
    
        # 統合テスト用のメインウィンドウを作成
        with patch('src.gui.main_window.SearchManager') as mock_search_manager, \
             patch('src.gui.main_window.DatabaseManager') as mock_db_manager, \
             patch('src.gui.main_window.Config') as mock_config:
    
            self.mock_search_manager = Mock()
            mock_search_manager.return_value = self.mock_search_manager
    
            self.mock_db_manager = Mock()
            mock_db_manager.return_value = self.mock_db_manager
    
            self.mock_config = Mock()
            mock_config.return_value = self.mock_config
    
&gt;           self.main_window = MainWindow()
                               ^^^^^^^^^^^^

tests/test_gui_integration.py:513: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
src/utils/error_handler.py:326: in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
src/gui/main_window.py:81: in __init__
    self._setup_ui()
src/gui/main_window.py:138: in _setup_ui
    self.search_pane = self._create_search_pane()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
src/gui/main_window.py:174: in _create_search_pane
    self.search_interface = SearchInterface()
                            ^^^^^^^^^^^^^^^^^
src/gui/search_interface.py:1033: in __init__
    self._setup_ui()
src/gui/search_interface.py:1085: in _setup_ui
    self.search_type_selector = SearchTypeSelector()
                                ^^^^^^^^^^^^^^^^^^^^
src/gui/search_interface.py:202: in __init__
    self._setup_ui()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;src.gui.search_interface.SearchTypeSelector(0x1ef741a0) at 0x7f5621f7a140&gt;

    def _setup_ui(self) -&gt; None:
        """UIの設定"""
        layout = QHBoxLayout(self)
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(10)
    
        # ラベル
        label = QLabel("検索タイプ:")
        label.setFont(QFont("", 9))
        layout.addWidget(label)
    
        # ラジオボタングループ
        self.button_group = QButtonGroup(self)
    
        # 全文検索ラジオボタン
        self.full_text_radio = QRadioButton("全文検索")
        self.full_text_radio.setToolTip("キーワードの完全一致による検索")
&gt;       self.button_group.addButton(self.full_text_radio, SearchType.FULL_TEXT.value.__hash__())
E       OverflowError

src/gui/search_interface.py:222: OverflowError</error></testcase><testcase classname="tests.test_gui_integration.TestGUIIntegration" name="test_gui_error_handling" time="0.006"><error message="failed on setup with &quot;OverflowError&quot;">self = &lt;tests.test_gui_integration.TestGUIIntegration object at 0x7f5630abe990&gt;
mock_qt_application = &lt;PySide6.QtWidgets.QApplication(0x1e1905d0) at 0x7f562d5e09c0&gt;
test_config = &lt;src.utils.config.Config object at 0x7f56308d0ad0&gt;

    @pytest.fixture(autouse=True)
    def setup(self, mock_qt_application, test_config):
        """テストセットアップ"""
        self.app = mock_qt_application
        self.test_config = test_config
    
        # 統合テスト用のメインウィンドウを作成
        with patch('src.gui.main_window.SearchManager') as mock_search_manager, \
             patch('src.gui.main_window.DatabaseManager') as mock_db_manager, \
             patch('src.gui.main_window.Config') as mock_config:
    
            self.mock_search_manager = Mock()
            mock_search_manager.return_value = self.mock_search_manager
    
            self.mock_db_manager = Mock()
            mock_db_manager.return_value = self.mock_db_manager
    
            self.mock_config = Mock()
            mock_config.return_value = self.mock_config
    
&gt;           self.main_window = MainWindow()
                               ^^^^^^^^^^^^

tests/test_gui_integration.py:513: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
src/utils/error_handler.py:326: in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
src/gui/main_window.py:81: in __init__
    self._setup_ui()
src/gui/main_window.py:138: in _setup_ui
    self.search_pane = self._create_search_pane()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
src/gui/main_window.py:174: in _create_search_pane
    self.search_interface = SearchInterface()
                            ^^^^^^^^^^^^^^^^^
src/gui/search_interface.py:1033: in __init__
    self._setup_ui()
src/gui/search_interface.py:1085: in _setup_ui
    self.search_type_selector = SearchTypeSelector()
                                ^^^^^^^^^^^^^^^^^^^^
src/gui/search_interface.py:202: in __init__
    self._setup_ui()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;src.gui.search_interface.SearchTypeSelector(0x1e234170) at 0x7f561c136380&gt;

    def _setup_ui(self) -&gt; None:
        """UIの設定"""
        layout = QHBoxLayout(self)
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(10)
    
        # ラベル
        label = QLabel("検索タイプ:")
        label.setFont(QFont("", 9))
        layout.addWidget(label)
    
        # ラジオボタングループ
        self.button_group = QButtonGroup(self)
    
        # 全文検索ラジオボタン
        self.full_text_radio = QRadioButton("全文検索")
        self.full_text_radio.setToolTip("キーワードの完全一致による検索")
&gt;       self.button_group.addButton(self.full_text_radio, SearchType.FULL_TEXT.value.__hash__())
E       OverflowError

src/gui/search_interface.py:222: OverflowError</error></testcase></testsuite></testsuites>