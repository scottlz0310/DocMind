[tool:pytest]
# pytest設定ファイル

# テストディレクトリ
testpaths = tests

# デフォルトオプション
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=src
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80

# テストマーカー定義
markers =
    unit: ユニットテスト
    integration: 統合テスト
    performance: パフォーマンステスト
    slow: 実行時間が長いテスト
    gui: GUIテスト
    database: データベーステスト
    search: 検索機能テスト
    embedding: 埋め込み機能テスト
    cache: キャッシュ機能テスト
    file_processing: ファイル処理テスト

# テストファイルパターン
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# 最小Pythonバージョン
minversion = 6.0

# 並行実行設定
# -n auto でCPUコア数に応じて並行実行
# addopts に追加する場合: --numprocesses=auto

# フィルタリング設定
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:PySide6.*

# テストディスカバリー設定
norecursedirs = 
    .git
    .tox
    dist
    build
    *.egg
    venv
    __pycache__
    .mypy_cache
    .pytest_cache

# ログ設定
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# JUnit XML出力設定
junit_family = xunit2
junit_logging = all
junit_log_passing_tests = false

# カバレッジ設定詳細
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */build/*
    */dist/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

show_missing = true
skip_covered = false
precision = 2

[coverage:html]
directory = htmlcov
title = DocMind Test Coverage Report

[coverage:xml]
output = coverage.xml