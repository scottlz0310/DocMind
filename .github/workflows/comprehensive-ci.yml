name: Comprehensive CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Setup virtual display
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb libegl1-mesa libxkbcommon-x11-0
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov pytest-benchmark pytest-xdist
    
    - name: Run unit tests
      run: |
        export QT_QPA_PLATFORM=offscreen
        pytest tests/unit/ -v --cov=src --cov-report=xml --maxfail=5 -n auto
      env:
        DISPLAY: :99
    
    - name: Run integration tests
      run: |
        export QT_QPA_PLATFORM=offscreen
        pytest tests/integration/ -v --maxfail=3
      env:
        DISPLAY: :99
    
    - name: Run performance tests
      run: |
        pytest tests/performance/ -v --benchmark-only
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  quality-gate:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install bandit safety ruff
    
    - name: Code quality check
      run: |
        # セキュリティチェック
        bandit -r src/
        
        # 依存関係セキュリティチェック
        safety check
        
        # コード品質チェック
        ruff check src/
    
    - name: Generate test report
      run: |
        mkdir -p reports
        echo "# Test Report" > reports/test-report.md
        echo "Generated on: $(date)" >> reports/test-report.md
        echo "Python version: ${{ matrix.python-version }}" >> reports/test-report.md
    
    - name: Upload test artifacts
      uses: actions/upload-artifact@v3
      with:
        name: test-reports
        path: reports/